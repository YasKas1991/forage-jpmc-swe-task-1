From 6c92e6136e5f43ee863d5761871409d1741299bb Mon Sep 17 00:00:00 2001
From: Yaser Kasim <YaserKasim@outlook.com>
Date: Mon, 18 Dec 2023 17:11:17 +0000
Subject: [PATCH 1/2] Task one changes made in client3.py

---
 client3.py | 30 ++++++++----------------------
 1 file changed, 8 insertions(+), 22 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..eac056f 100644
--- a/client3.py
+++ b/client3.py
@@ -1,22 +1,4 @@
-################################################################################
-#
-#  Permission is hereby granted, free of charge, to any person obtaining a
-#  copy of this software and associated documentation files (the "Software"),
-#  to deal in the Software without restriction, including without limitation
-#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
-#  and/or sell copies of the Software, and to permit persons to whom the
-#  Software is furnished to do so, subject to the following conditions:
-#
-#  The above copyright notice and this permission notice shall be included in
-#  all copies or substantial portions of the Software.
-#
-#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-#  DEALINGS IN THE SOFTWARE.
+
 
 import json
 import random
@@ -35,14 +17,17 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price)/2 # Change of price to average
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
     """ ------------- Update this function ------------- """
-    return 1
+    if (price_b == 0):
+        # when price_b is 0 avoid throwing ZeroDivisionError 
+        return
+    return price_a/price_b 
 
 
 # Main
@@ -52,8 +37,9 @@ if __name__ == "__main__":
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
         """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices ["ABC"], prices["DEF"]))
-- 
2.43.0.windows.1


From c85b4624f2ae761f8b718080c5c528ae817b1203 Mon Sep 17 00:00:00 2001
From: Yaser Kasim <YaserKasim@outlook.com>
Date: Tue, 19 Dec 2023 20:26:05 +0000
Subject: [PATCH 2/2] Updated client_test.py unit tests

---
 client_test.py | 34 +++++++++++++++++++++++++++++++---
 1 file changed, 31 insertions(+), 3 deletions(-)

diff --git a/client_test.py b/client_test.py
index af2bf26..3362a91 100644
--- a/client_test.py
+++ b/client_test.py
@@ -7,17 +7,45 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
-    """ ------------ Add the assertion below ------------ """
+  
+  
+     # Arrange[Expected results]
+    expected_results = [
+    ('ABC', 120.48, 121.2, (120.48 + 121.2)/2),
+    ('DEF', 117.87, 121.68, (117.87 + 121.68)/2)
+]
+
+     
+     
+     # Act: Call function and store output
+    for i in range (len(quotes)):
+       result = getDataPoint(quotes[i])
+       print(f"Test {i}: Expected {expected_results[i]}, Got {result}") # Test for mismatch, identify and clearly define issue
+    # Assert: Verify that function returns expected results
+       self.assertEqual(result, expected_results[i])
+
+
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
-    """ ------------ Add the assertion below ------------ """
 
 
-  """ ------------ Add more unit tests ------------ """
+
+    # Arrange[Expected results]
+    expected_results = [
+    ('ABC', 120.48, 119.2, (120.48 + 119.2)/2),
+    ('DEF', 117.87, 121.68, (117.87 + 121.68)/2)
+]
+
+
+    # Act and Assert
+    for i in range (len(quotes)):
+       result = getDataPoint(quotes[i])
+       print(f"Test {i}: Expected {expected_results[i]}, Got {result}")
+       self.assertEqual(result, expected_results[i])
 
 
 
-- 
2.43.0.windows.1

